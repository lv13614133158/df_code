# This is the CMakeCache file.
# For build in directory: /home/nvidia/df/libpcap-1.9.1/build
# It was generated by CMake: /usr/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Build optimizer debugging code
BDEBUG:BOOL=OFF

//Build shared libraries
BUILD_SHARED_LIBS:BOOL=ON

//Build with libnl
BUILD_WITH_LIBNL:BOOL=ON

//Path to a program.
CMAKE_ADDR2LINE:FILEPATH=/home/nvidia/df/HAD/S73a2/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-addr2line

//Path to a program.
CMAKE_AR:FILEPATH=/home/nvidia/df/HAD/S73a2/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-ar

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_CXX_COMPILER_AR:FILEPATH=/home/nvidia/df/HAD/S73a2/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-gcc-ar

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_CXX_COMPILER_RANLIB:FILEPATH=/home/nvidia/df/HAD/S73a2/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-gcc-ranlib

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_AR:FILEPATH=/home/nvidia/df/HAD/S73a2/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-gcc-ar

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_RANLIB:FILEPATH=/home/nvidia/df/HAD/S73a2/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-gcc-ranlib

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Path to a program.
CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

//User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

//Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

//Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/home/nvidia/df/libpcap-1.9.1/build/install

//Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

//System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/gmake

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/home/nvidia/df/HAD/S73a2/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/home/nvidia/df/HAD/S73a2/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/home/nvidia/df/HAD/S73a2/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-objdump

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=pcap

//Path to a program.
CMAKE_RANLIB:FILEPATH=/home/nvidia/df/HAD/S73a2/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-ranlib

//Path to a program.
CMAKE_READELF:FILEPATH=/home/nvidia/df/HAD/S73a2/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-readelf

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/home/nvidia/df/HAD/S73a2/toolchain/arm-gnu-toolchain-12.2.rel1-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-strip

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Path to a library.
DAGCONF_LIBRARY:FILEPATH=DAGCONF_LIBRARY-NOTFOUND

//Path to a file.
DAG_INCLUDE_DIR:PATH=DAG_INCLUDE_DIR-NOTFOUND

//Path to a library.
DAG_LIBRARY:FILEPATH=DAG_LIBRARY-NOTFOUND

//Disable Bluetooth sniffing support
DISABLE_BLUETOOTH:BOOL=OFF

//Disable Endace DAG card support
DISABLE_DAG:BOOL=OFF

//Disable D-Bus sniffing support
DISABLE_DBUS:BOOL=OFF

//Disable netmap support
DISABLE_NETMAP:BOOL=OFF

//Disable RDMA sniffing support
DISABLE_RDMA:BOOL=OFF

//Disable Septel card support
DISABLE_SEPTEL:BOOL=OFF

//Disable Myricom SNF support
DISABLE_SNF:BOOL=OFF

//Disable Riverbed TurboCap support
DISABLE_TC:BOOL=OFF

//Disable USB sniffing support
DISABLE_USB:BOOL=OFF

//Enable remote capture
ENABLE_REMOTE:BOOL=OFF

//Extra compiler options for fseeko support
FSEEKO_COMPILE_OPTIONS:STRING=

//Extra definitions for fseeko support
FSEEKO_DEFINITIONS:STRING=

//Extra definitions for fseeko support
FSEEKO_LIBRARIES:STRING=

//Enable IPv6
INET6:BOOL=ON

//Path to a program.
LEX_EXECUTABLE:FILEPATH=/usr/bin/flex

//Extra definitions for large file support
LFS_COMPILE_OPTIONS:STRING=

//Extra definitions for large file support
LFS_DEFINITIONS:STRING=

//Extra definitions for large file support
LFS_LIBRARIES:STRING=

//Disable protochain instruction
NO_PROTOCHAIN:BOOL=OFF

//Enable Linux packet ring support
PCAP_SUPPORT_PACKET_RING:BOOL=ON

//Packet capture type
PCAP_TYPE:STRING=

//Arguments to supply to pkg-config
PKG_CONFIG_ARGN:STRING=

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=PKG_CONFIG_EXECUTABLE-NOTFOUND

//Path to directory with include and lib subdirectories for Septel
// API
SEPTEL_ROOT:PATH=/home/nvidia/df/libpcap-1.9.1/../septel

//Path to a file.
SNF_INCLUDE_DIR:PATH=SNF_INCLUDE_DIR-NOTFOUND

//Path to a library.
SNF_LIBRARY:FILEPATH=SNF_LIBRARY-NOTFOUND

//Path to a file.
TC_INCLUDE_DIR:PATH=TC_INCLUDE_DIR-NOTFOUND

//Path to a library.
TC_LIBRARY:FILEPATH=TC_LIBRARY-NOTFOUND

//Path to a program.
YACC_EXECUTABLE:FILEPATH=/usr/bin/bison

//Build parser debugging code
YYDEBUG:BOOL=OFF

//Value Computed by CMake
pcap_BINARY_DIR:STATIC=/home/nvidia/df/libpcap-1.9.1/build

//Value Computed by CMake
pcap_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
pcap_SOURCE_DIR:STATIC=/home/nvidia/df/libpcap-1.9.1


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CMAKE_ADDR2LINE
CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/home/nvidia/df/libpcap-1.9.1/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=22
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=1
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_AR
CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DLLTOOL
CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Test CMAKE_HAVE_LIBC_PTHREAD
CMAKE_HAVE_LIBC_PTHREAD:INTERNAL=1
//Have include pthread.h
CMAKE_HAVE_PTHREAD_H:INTERNAL=1
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/home/nvidia/df/libpcap-1.9.1
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RUNSTATEDIR
CMAKE_INSTALL_RUNSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//Install .so files without execute permission.
CMAKE_INSTALL_SO_NO_EXE:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=2
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_READELF
CMAKE_READELF-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/share/cmake-3.22
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DAGCONF_LIBRARY
DAGCONF_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DAG_INCLUDE_DIR
DAG_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DAG_LIBRARY
DAG_LIBRARY-ADVANCED:INTERNAL=1
DBUS_CFLAGS:INTERNAL=
DBUS_CFLAGS_I:INTERNAL=
DBUS_CFLAGS_OTHER:INTERNAL=
DBUS_FOUND:INTERNAL=
DBUS_INCLUDEDIR:INTERNAL=
DBUS_LIBDIR:INTERNAL=
DBUS_LIBS:INTERNAL=
DBUS_LIBS_L:INTERNAL=
DBUS_LIBS_OTHER:INTERNAL=
DBUS_LIBS_PATHS:INTERNAL=
DBUS_MODULE_NAME:INTERNAL=
DBUS_PREFIX:INTERNAL=
DBUS_STATIC_CFLAGS:INTERNAL=
DBUS_STATIC_CFLAGS_I:INTERNAL=
DBUS_STATIC_CFLAGS_OTHER:INTERNAL=
DBUS_STATIC_LIBDIR:INTERNAL=
DBUS_STATIC_LIBS:INTERNAL=
DBUS_STATIC_LIBS_L:INTERNAL=
DBUS_STATIC_LIBS_OTHER:INTERNAL=
DBUS_STATIC_LIBS_PATHS:INTERNAL=
DBUS_VERSION:INTERNAL=
//Details about finding FSEEKO
FIND_PACKAGE_MESSAGE_DETAILS_FSEEKO:INTERNAL=[TRUE][v()]
//Details about finding LFS
FIND_PACKAGE_MESSAGE_DETAILS_LFS:INTERNAL=[TRUE][v()]
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//Found fseeko
FSEEKO_FOUND:INTERNAL=TRUE
//Have function asprintf
HAVE_ASPRINTF:INTERNAL=1
//Have include bluetooth/bluetooth.h
HAVE_BLUETOOTH_BLUETOOTH_H:INTERNAL=
//Have function ether_hostton
HAVE_ETHER_HOSTTON:INTERNAL=1
//Have function ffs
HAVE_FFS:INTERNAL=1
//Have function getifaddrs
HAVE_GETIFADDRS:INTERNAL=1
//Test HAVE_GNU_STRERROR_R
HAVE_GNU_STRERROR_R:INTERNAL=1
//Have include sys/types.h;ifaddrs.h
HAVE_IFADDRS_H:INTERNAL=1
//Have include msg.h
HAVE_INC_MSG_H:INTERNAL=
//Have include inttypes.h
HAVE_INTTYPES_H:INTERNAL=1
//Have function nl_socket_alloc
HAVE_LIBNL:INTERNAL=
//Have include limits.h
HAVE_LIMITS_H:INTERNAL=1
//Have includes linux/compiler.h
HAVE_LINUX_COMPILER_H:INTERNAL=
//Have include linux/ethtool.h
HAVE_LINUX_ETHTOOL_H:INTERNAL=1
//Test HAVE_LINUX_GETNETBYNAME_R
HAVE_LINUX_GETNETBYNAME_R:INTERNAL=1
//Test HAVE_LINUX_GETPROTOBYNAME_R
HAVE_LINUX_GETPROTOBYNAME_R:INTERNAL=1
//Have include sys/socket.h;linux/if_bonding.h
HAVE_LINUX_IF_BONDING_H:INTERNAL=1
//Have include linux/net_tstamp.h
HAVE_LINUX_NET_TSTAMP_H:INTERNAL=1
//Have include linux/socket.h
HAVE_LINUX_SOCKET_H:INTERNAL=1
//Have include linux/sockios.h
HAVE_LINUX_SOCKIOS_H:INTERNAL=1
//Have include linux/usbdevice_fs.h
HAVE_LINUX_USBDEVICE_FS_H:INTERNAL=1
//Have include sys/socket.h;linux/wireless.h
HAVE_LINUX_WIRELESS_H:INTERNAL=1
//Have include netinet/if_ether.h
HAVE_NETINET_IF_ETHER_H:INTERNAL=1
//Have include netpacket/packet.h
HAVE_NETPACKET_PACKET_H:INTERNAL=1
//Have includes sys/types.h;net/bpf.h
HAVE_NET_BPF_H:INTERNAL=
//Have include net/enet.h
HAVE_NET_ENET_H:INTERNAL=
//Have include net/nit.h
HAVE_NET_NIT_H:INTERNAL=
//Have include net/pfilt.h
HAVE_NET_PFILT_H:INTERNAL=
//Have includes sys/types.h;sys/socket.h;net/if.h;net/pfvar.h
HAVE_NET_PFVAR_H:INTERNAL=
//Have include net/raw.h
HAVE_NET_RAW_H:INTERNAL=
//Have function snprintf
HAVE_SNPRINTF:INTERNAL=1
//Result of TRY_COMPILE
HAVE_SOCKLEN_T:INTERNAL=TRUE
//Have include stddef.h
HAVE_STDDEF_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have function strerror
HAVE_STRERROR:INTERNAL=1
//Have function strerror_r
HAVE_STRERROR_R:INTERNAL=1
//Have function strlcat
HAVE_STRLCAT:INTERNAL=
//Have function strlcpy
HAVE_STRLCPY:INTERNAL=
//Have function strtok_r
HAVE_STRTOK_R:INTERNAL=1
//Test HAVE_STRUCT_SOCKADDR_SA_LEN
HAVE_STRUCT_SOCKADDR_SA_LEN:INTERNAL=
//Result of TRY_COMPILE
HAVE_STRUCT_SOCKADDR_STORAGE:INTERNAL=TRUE
//Test HAVE_STRUCT_TPACKET_AUXDATA_TP_VLAN_TCI
HAVE_STRUCT_TPACKET_AUXDATA_TP_VLAN_TCI:INTERNAL=1
//Result of TRY_COMPILE
HAVE_STRUCT_TPACKET_STATS:INTERNAL=TRUE
//Test HAVE_STRUCT_USBDEVFS_CTRLTRANSFER_BREQUESTTYPE
HAVE_STRUCT_USBDEVFS_CTRLTRANSFER_BREQUESTTYPE:INTERNAL=1
//Have include bitypes.h
HAVE_SYS_BITYPES_H:INTERNAL=
//Have include sys/dlpi.h
HAVE_SYS_DLPI_H:INTERNAL=
//Have include sys/ioccom.h
HAVE_SYS_IOCCOM_H:INTERNAL=
//Have include sys/net/nit.h
HAVE_SYS_NET_NIT_H:INTERNAL=
//Have include sys/select.h
HAVE_SYS_SELECT_H:INTERNAL=1
//Have include sys/sockio.h
HAVE_SYS_SOCKIO_H:INTERNAL=
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have include unistd.h
HAVE_UNISTD_H:INTERNAL=1
//Have function vasprintf
HAVE_VASPRINTF:INTERNAL=1
//Have function vsnprintf
HAVE_VSNPRINTF:INTERNAL=1
//Have function vsyslog
HAVE_VSYSLOG:INTERNAL=1
//Found LFS
LFS_FOUND:INTERNAL=TRUE
//Have library ibverbs
LIBIBVERBS_HAS_IBV_GET_DEVICE_LIST:INTERNAL=
//Have library str
LIBSTR_HAS_PUTMSG:INTERNAL=
//Have symbol getnetbyname_r
NETDB_H_DECLARES_GETNETBYNAME_R:INTERNAL=1
//Have symbol getprotobyname_r
NETDB_H_DECLARES_GETPROTOBYNAME_R:INTERNAL=1
//Have symbol ether_hostton
NETINET_ETHER_H_DECLARES_ETHER_HOSTTON:INTERNAL=1
//Have symbol ether_hostton
NET_ETHERNET_H_DECLARES_ETHER_HOSTTON:INTERNAL=
//Test PCAP_SUPPORT_NETFILTER
PCAP_SUPPORT_NETFILTER:INTERNAL=1
//Test PCAP_SUPPORT_NETMAP
PCAP_SUPPORT_NETMAP:INTERNAL=
//ADVANCED property for variable: PKG_CONFIG_ARGN
PKG_CONFIG_ARGN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SNF_INCLUDE_DIR
SNF_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SNF_LIBRARY
SNF_LIBRARY-ADVANCED:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(socklen_t)
SOCKLEN_T:INTERNAL=4
//Have function getaddrinfo
STDLIBS_HAVE_GETADDRINFO:INTERNAL=1
//Have function putmsg
STDLIBS_HAVE_PUTMSG:INTERNAL=
//Have symbol ffs
STRINGS_H_DECLARES_FFS:INTERNAL=1
//CHECK_TYPE_SIZE: sizeof(struct sockaddr_storage)
STRUCT_SOCKADDR_STORAGE:INTERNAL=128
//CHECK_TYPE_SIZE: sizeof(struct tpacket_stats)
STRUCT_TPACKET_STATS:INTERNAL=8
//ADVANCED property for variable: TC_INCLUDE_DIR
TC_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: TC_LIBRARY
TC_LIBRARY-ADVANCED:INTERNAL=1
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=/home/nvidia/df/libpcap-1.9.1/build/install
__pkg_config_checked_DBUS:INTERNAL=1
//Have symbol fseeko
fseeko_native:INTERNAL=1
//Test fvisibility-hidden
fvisibility-hidden:INTERNAL=1
//Test lfs_native
lfs_native:INTERNAL=1
//Test std-gnu99
std-gnu99:INTERNAL=1

